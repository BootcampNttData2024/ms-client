openapi: '3.0.2'
info:
  title: Microservice Client - OpenAPI 3.0
  version: '1.0'
  description: |- 
    La presente especificación contiene los endpoints del microservicio Client
    y esta basado en la especificación OpenAPI 3.0.  
  termsOfService: http://swagger.io/terms/
  contact:
    email: alcibarvasquez@gmail.com
servers:
  - url: http://localhost:8092

tags:
  - name: Client
    description: client
  - name: ClientProfile
    description: client type
  - name: DocumentType
    description: client document type

paths:  
  /client:
    post:
      tags:
        - Client
      operationId: addClient
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/ClientRequest'
      responses:
        '200':
          description: 'response client post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'  
    get:
      tags:
        - Client
      operationId: getAllClients
      description: GETALL
      responses:
        '200':
          description: 'response get all clients'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponse'
  /client/{clientId}:
    put:
      tags:
        - Client
      operationId: updateClient
      description: 'PUT'
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ClientRequest'
      responses:
        '200':
          description: 'response client put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
    get:
      tags:
        - Client
      operationId: getClientById
      description: GET
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get client by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
    delete:
      tags:
        - Client
      operationId: deleteClientById
      description: 'DELETE'
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete client by id    
  /client-profile:
    post:
      tags:
        - ClientProfile
      operationId: addClientProfile
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/ClientProfileRequest'
      responses:
        '200':
          description: 'response client type post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
    get:
      tags:
        - ClientProfile
      operationId: getAllClientProfile
      description: GETALL
      responses:
        '200':
          description: 'response get all client type'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientProfileResponse'
  /client-profile/{profileId}:
    put:
      tags:
        - ClientProfile
      operationId: updateClientProfile
      description: 'PUT'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ClientProfileRequest'
      responses:
        '200':
          description: 'response client type put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'    
    get:
      tags:
        - ClientProfile
      operationId: getClientProfileById
      description: GET
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get client type by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfileResponse'
    delete:
      tags:
        - ClientProfile
      operationId: deleteClientProfileById
      description: 'DELETE'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete client type by id

components:
  schemas:
    ClientRequest:
      type: object
      description: Client model
      required:
        - clientTypeId
        - profileId
      properties:      
        profileId:
          type: string
          example: '1'    
        clientType:
          type: string
          example: 'PERSONAL, EMPRESARIAL'                
        documentType:
          type: string
          example: 'DNI, RUC'
        documentNumber:
          type: integer
          example: 70787541
        firstName:
          type: string
          example: 'Alcibar'
        lastName:
          type: string
          example: 'Vasquez'
        email:
          type: string
          example: 'alcibarvasquez@gmail.com'
        phoneNumber:
          type: integer
          example: 927293552
        address:
          type: string
          example: Av. Brazil 456
    ClientResponse:
      type: object
      description: Client model
      properties:
        clientId:
          type: string
          example: '1'
        profileId:
          type: string
          example: '1' 
        clientType:
          type: string
          example: 'PERSONAL, EMPRESARIAL'   
        documentType:
          type: string
          example: 'DNI, RUC'            
        documentNumber:
          type: integer
          example: 70787541
        firstName:
          type: string
          example: 'Alcibar'
        lastName:
          type: string
          example: 'Vasquez'
        email:
          type: string
          example: 'alcibarvasquez@gmail.com'
        phoneNumber:
          type: integer
          example: 927293552
        address:
          type: string
          example: Av. Brazil 456
    ClientProfileRequest:
      type: object
      description: Client type model
      required:
        - name
      properties:
        name:
          type: string
          example: 'VIP, PYME'
    ClientProfileResponse:
      type: object
      description: Client type model
      properties:
        profileId:
          type: string
          example: '1'
        name:
          type: string
          example: 'VIP, PYME'

  requestBodies:
    ClientRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientRequest'
    ClientProfileRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientProfileRequest'
